create_landmark = schema.execute(
    '''
    mutation createLandMark {
        create_landmark(landmark_data: {name: "SOL", description: "NY",
        latitude: -142.0010, longitude: 42.0001, city: "NYC", state: "NY",
        country: "USA", continent: "NA"}) {
            landmark{
                     name,
                     description,
                     latitude,
                     longitude,
                     city,
                     state,
                     country,
                     continent
            },
            ok
        }
    }
    '''
)
items = dict(create_landmark.data.items())
print(json.dumps(items, indent=4))

create_landmark = schema.execute(
    '''
    mutation createLandMark {
        create_landmark(landmark_data: {name: "GSB", description: "SFO",
        latitude: -100.0010, longitude: 60.0001, city: "SFO", state: "CA",
        country: "USA", continent: "NA"}) {
            landmark{
                     name,
                     description,
                     latitude,
                     longitude,
                     city,
                     state,
                     country,
                     continent
            },
            ok
        }
    }
    '''
)
items = dict(create_landmark.data.items())
print(json.dumps(items, indent=4))

create_person = schema.execute(
    '''
    mutation createPerson {
        create_person(person_data: {key: "111", name: "Shreyas", rank: 21,
        score: 121.90, bio: "test bio", email: "shreyas@gmail.com", phone:
        "+12222222"}){
            person{
                   key,
                   name,
                   rank,
                   score,
                   bio,
                   email,
                   phone
            },
            ok
        }
    }
    '''
)
items = dict(create_person.data.items())
print(json.dumps(items, indent=4))

create_person = schema.execute(
    '''
    mutation createPerson {
        create_person(person_data: {key: "222", name: "Rudy", rank: 11,
        score: 131.90, bio: "test bio", email: "rudy@gmail.com", phone:
        "+13333333"}){
            person{
                   key,
                   name,
                   rank,
                   score,
                   bio,
                   email,
                   phone
            },
            ok
        }
    }
    '''
)
items = dict(create_person.data.items())
print(json.dumps(items, indent=4))

link_landmark_visitor = schema.execute(
    '''
    mutation linkLandMarkVisitor {
        link_landmark_visitor(visitor_data: {landmark_name: "SOL", visitor_key:
        "111"}){
            landmark{
                     name,
            },
            visitor{
                   key,
            },
            ok
        }
    }
    '''
)
items = dict(link_landmark_visitor.data.items())
print(json.dumps(items, indent=4))

link_landmark_visitor = schema.execute(
    '''
    mutation linkLandMarkVisitor {
        link_landmark_visitor(visitor_data: {landmark_name: "GSB", visitor_key:
        "222"}){
            landmark{
                     name,
            },
            visitor{
                   key,
            },
            ok
        }
    }
    '''
)
items = dict(link_landmark_visitor.data.items())
print(json.dumps(items, indent=4))

link_landmark_visitor = schema.execute(
    '''
    mutation linkLandMarkVisitor {
        link_landmark_visitor(visitor_data: {landmark_name: "GSB", visitor_key:
        "111"}){
            landmark{
                     name,
            },
            visitor{
                   key,
            },
            ok
        }
    }
    '''
)
items = dict(link_landmark_visitor.data.items())
print(json.dumps(items, indent=4))

"""
delink_landmark_visitor = schema.execute(
    '''
    mutation delinkLandMarkVisitor {
        delink_landmark_visitor(visitor_data: {landmark_name: "SOL",
        visitor_key: "111"}){
            landmark{
                     name,
            },
            visitor{
                   key,
            },
            ok
        }
    }
    '''
)
items = dict(delink_landmark_visitor.data.items())
print(json.dumps(items, indent=4))
"""

query_landmark = schema.execute(
    '''
    {
        landmark (name: "SOL"){
            name,
            description,
            latitude,
            longitude,
            city,
            state,
            country,
            continent
        }
    }
    '''
)
items = dict(query_landmark.data.items())
print(json.dumps(items, indent=4))

query_person = schema.execute(
    '''
    {
        person (key: "111"){
            key,
            name,
            rank,
            score,
            bio,
            email,
            phone
        }
    }
    '''
)
items = dict(query_person.data.items())
print(json.dumps(items, indent=4))

query_landmark_visitors = schema.execute(
    '''
    {
        landmark_visitors (name: "SOL"){
            key,
            name,
            rank,
            score,
            bio,
            email,
            phone
        }
    }
    '''
)
items = dict(query_landmark_visitors.data.items())
print(json.dumps(items, indent=4))

query_person_visits = schema.execute(
    '''
    {
        person_visits (key: "111"){
            name,
            description,
            latitude,
            longitude,
            city,
            state,
            country,
            continent
        }
    }
    '''
)
items = dict(query_person_visits.data.items())
print(json.dumps(items, indent=4))

"""
delete_landmark = schema.execute(
    '''
    mutation deleteLandMark {
        delete_landmark(landmark_data: {name: "SOL"}) {
            landmark{
                     name,
                     description,
                     latitude,
                     longitude,
                     city,
                     state,
                     country,
                     continent
            },
            ok
        }

    }
    '''
)
items = dict(delete_landmark.data.items())
print(json.dumps(items, indent=4))

delete_person = schema.execute(
    '''
    mutation deletePerson {
        delete_person(person_data: {key: "111"}) {
            person{
                   key,
                   name,
                   rank,
                   score,
                   bio,
                   email,
                   phone
            },
            ok
        }

    }
    '''
)
items = dict(delete_person.data.items())
print(json.dumps(items, indent=4))
"""

"""
create_image = schema.execute(
    '''
    mutation createImage {
        create_image(image_data: {key: "aaa111", url: "https://image",
        description: "SOL1", score: 80.4, private: false, timestamp:
        "2019-05-20T02:50:31+05:30"}){
            image{
                  key,
                  url,
                  description,
                  score,
                  private,
                  timestamp
            },
            ok
        }
    }
    '''
)
items = dict(create_image.data.items())
print(json.dumps(items, indent=4))

create_image = schema.execute(
    '''
    mutation createImage {
        create_image(image_data: {key: "aaa222", url: "https://image",
        description: "SOL2", score: 80.4, private: false, timestamp:
        "2019-05-20T06:50:31+05:30"}){
            image{
                  key,
                  url,
                  description,
                  score,
                  private,
                  timestamp
            },
            ok
        }
    }
    '''
)
items = dict(create_image.data.items())
print(json.dumps(items, indent=4))

create_image = schema.execute(
    '''
    mutation createImage {
        create_image(image_data: {key: "bbb111", url: "https://image",
        description: "GSB1", score: 80.4, private: false, timestamp:
        "2019-05-20T02:50:31+05:30"}){
            image{
                  key,
                  url,
                  description,
                  score,
                  private,
                  timestamp
            },
            ok
        }
    }
    '''
)
items = dict(create_image.data.items())
print(json.dumps(items, indent=4))

query_image = schema.execute(
    '''
    {
        image (key: "aaa111"){
            key,
            url,
            description,
            score,
            private,
            timestamp
        }
    }
    '''
)
items = dict(query_image.data.items())
print(json.dumps(items, indent=4))

delete_image = schema.execute(
    '''
    mutation deleteImage {
        delete_image(image_data: {key: "aaa111"}) {
            image{
                  key,
                  url,
                  description,
                  score,
                  private,
                  timestamp
            },
            ok
        }

    }
    '''
)
items = dict(delete_image.data.items())
print(json.dumps(items, indent=4))

link_landmark_image = schema.execute(
    '''
    mutation linkLandMarkImage {
        link_landmark_image(
            landmark_image_data: {
                                  landmark_name: "GSB",
                                  image_key: "bbb111"})
            {
             landmark{
                      name,
             },
             image{
                   key,
             },
             ok
        }
    }
    '''
)
items = dict(link_landmark_image.data.items())
print(json.dumps(items, indent=4))

link_landmark_image = schema.execute(
    '''
    mutation linkLandMarkImage {
        link_landmark_image(
            landmark_image_data: {
                                  landmark_name: "SOL",
                                  image_key: "aaa111"})
            {
             landmark{
                      name,
             },
             image{
                   key,
             },
             ok
        }
    }
    '''
)
items = dict(link_landmark_image.data.items())
print(json.dumps(items, indent=4))

link_landmark_image = schema.execute(
    '''
    mutation linkLandMarkImage {
        link_landmark_image(
            landmark_image_data: {
                                  landmark_name: "SOL",
                                  image_key: "aaa222"})
            {
             landmark{
                      name,
             },
             image{
                   key,
             },
             ok
        }
    }
    '''
)
items = dict(link_landmark_image.data.items())
print(json.dumps(items, indent=4))

delink_landmark_image = schema.execute(
    '''
    mutation delinkLandMarkImage {
        delink_landmark_image(
            landmark_image_data: {
                                  landmark_name: "SOL",
                                  image_key: "aaa222"})
            {
             landmark{
                      name,
             },
             image{
                   key,
             },
             ok
        }
    }
    '''
)
items = dict(delink_landmark_image.data.items())
print(json.dumps(items, indent=4))
"""

query_landmark_images = schema.execute(
    '''
    {
        landmark_images (name: "SOL"){
            key,
            url,
            description,
            score,
            private,
            timestamp
        }
    }
    '''
)
items = dict(query_landmark_images.data.items())
print(json.dumps(items, indent=4))

"""
link_friends = schema.execute(
    '''
    mutation linkFriends {
        link_friends(
            friends_data: {
                           friend1_key: "111",
                           friend2_key: "222"})
            {
             friend1{
                     key,
             },
             friend2{
                     key,
             },
             ok
        }
    }
    '''
)
items = dict(link_friends.data.items())
print(json.dumps(items, indent=4))

delink_friends = schema.execute(
    '''
    mutation delinkFriends {
        delink_friends(
            friends_data: {
                           friend1_key: "111",
                           friend2_key: "222"})
            {
             friend1{
                     key,
             },
             friend2{
                     key,
             },
             ok
        }
    }
    '''
)
items = dict(delink_friends.data.items())
print(json.dumps(items, indent=4))

query_image_landmarks = schema.execute(
    '''
    {
        image_landmarks (key: "aaa111"){
            name,
        }
    }
    '''
)
items = dict(query_image_landmarks.data.items())
print(json.dumps(items, indent=4))
"""

query_friends = schema.execute(
    '''
    {
        friends (key: "111"){
            key,
        }
    }
    '''
)
items = dict(query_friends.data.items())
print(json.dumps(items, indent=4))

link_following = schema.execute(
    '''
    mutation linkFollowing {
        link_following(
            following_data: {
                             person_key: "444",
                             follower_key: "111"})
            {
             person{
                    key,
             },
             follower{
                      key,
             },
             ok
        }
    }
    '''
)
items = dict(link_following.data.items())
print(json.dumps(items, indent=4))

"""
delink_following = schema.execute(
    '''
    mutation delinkFollowing {
        delink_following(
            following_data: {
                             person_key: "444",
                             follower_key: "111"})
            {
             person{
                    key,
             },
             follower{
                      key,
             },
             ok
        }
    }
    '''
)
items = dict(delink_following.data.items())
print(json.dumps(items, indent=4))
"""

query_followers = schema.execute(
    '''
    {
        followers (key: "333"){
            key,
            name
        }
    }
    '''
)
items = dict(query_followers.data.items())
print(json.dumps(items, indent=4))

query_followings = schema.execute(
    '''
    {
        followings (key: "111"){
            key,
            name
        }
    }
    '''
)
items = dict(query_followings.data.items())
print(json.dumps(items, indent=4))

